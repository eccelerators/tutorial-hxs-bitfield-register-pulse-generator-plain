-- Copyright (C) 2024 Eccelerators GmbH
-- 
-- This code was generated by:
--
-- HxS Compiler v0.0.0-0000000
-- VHDL Extension for HxS 1.0.21-b962bd24
-- 
-- Further information at https://eccelerators.com/hxs
-- 
-- Changes to this file may cause incorrect behavior and will be lost if the
-- code is regenerated.
library ieee;
	use ieee.std_logic_1164.all;
	use ieee.numeric_std.all;

package TutBitfieldRegisterIfcPackage is

	type T_TutBitfieldRegisterIfcWishboneDown is
	record
		Adr : std_logic_vector(7 downto 0);
		Sel : std_logic_vector(3 downto 0);
		DatIn : std_logic_vector(31 downto 0);
		We : std_logic;
		Stb : std_logic;
		Cyc : std_logic;
	end record;
	
	type T_TutBitfieldRegisterIfcWishboneUp is
	record
		DatOut : std_logic_vector(31 downto 0);
		Ack : std_logic;
	end record;
	
	type T_TutBitfieldRegisterIfcTrace is
	record
		WishboneDown : T_TutBitfieldRegisterIfcWishboneDown;
		WishboneUp : T_TutBitfieldRegisterIfcWishboneUp;
		UnoccupiedAck : std_logic;
		TimeoutAck : std_logic;
	end record;
	
	type T_TutBitfieldRegisterIfcTutBlkDown is
	record
		CounterOperation : std_logic_vector(1 downto 0);
		CounterThreshold : std_logic_vector(15 downto 0);
	end record;
	
	constant TUTBLK_BASE_ADDRESS : std_logic_vector(7 downto 0) := x"00";
	constant TUTBLK_SIZE : std_logic_vector(7 downto 0) := x"04";
	
	constant TUTREG_WIDTH : integer := 18;
	constant TUTREG_ADDRESS : std_logic_vector(7 downto 0) := std_logic_vector(x"00" + unsigned(TUTBLK_BASE_ADDRESS));
	
	constant COUNTEROPERATION_POSITION : integer := 16;
	constant COUNTEROPERATION_WIDTH : integer := 2;
	constant COUNTEROPERATION_MASK : std_logic_vector(31 downto 0) := x"00030000";
	constant HALTED : std_logic_vector(1 downto 0) := "00";
	constant STEPPINGUP : std_logic_vector(1 downto 0) := "01";
	constant STEPPINGDOWN : std_logic_vector(1 downto 0) := "10";
	
	constant COUNTERTHRESHOLD_POSITION : integer := 0;
	constant COUNTERTHRESHOLD_WIDTH : integer := 16;
	constant COUNTERTHRESHOLD_MASK : std_logic_vector(31 downto 0) := x"0000FFFF";
	
end;
