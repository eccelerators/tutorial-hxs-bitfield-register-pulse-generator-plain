
    -- global
    -- var GetPulseVal 0  
    
    -- intern
    var GetNumberOfRisingEdgeRecordsVal 0
    var GetRisingEdgeTimestamp0Val 0
    var GetRisingEdgeTimestamp1Val 0
    var GetRisingEdgeTimestamp2Val 0
    var GetRisingEdgeTimestamp3Val 0
    var GetNumberOfFallingEdgeRecordsVal 0
    var GetFallingEdgeTimestamp0Val 0
    var GetFallingEdgeTimestamp1Val 0
    var GetFallingEdgeTimestamp2Val 0
    var GetFallingEdgeTimestamp3Val 0
    
    var PulseWidthHigh0Val 0
    var PulseWidthLow0Val 0
    var PulseWidthHigh1Val 0
    var PulseWidthLow1Val 0
    var PulseWidthHigh2Val 0
    var PulseWidthLow2Val 0
    var PulseWidthHigh3Val 0
    
    var PulseWidthHighMin 1480
    var PulseWidthHighMax 1520
    var PulseWidthLowMin 2480
    var PulseWidthLowMax 2520

testPeriod4000nsWidth1500ns:
proc   
    call $startStandardTestShell
    -- trace 1
    signal write out_InitPulseGeneratorPlain 1
    wait 100
    signal write out_InitPulseGeneratorPlain 0
    wait 100
    
    equ SetPulsePeriodNsVal 4000   
    call $setPulsePeriodNs
    equ SetPulseWidthNsVal 1500   
    call $setPulseWidthNs    
 
    marker 0 1
    signal write out_PulseRisingEdgeTimestampRecorderRestart 0
    signal write out_PulseRisingEdgeTimestampRecorderRestart 1
    signal write out_PulseFallingEdgeTimestampRecorderRestart 0
    signal write out_PulseFallingEdgeTimestampRecorderRestart 1      
    equ SetOperationMVal $RunningMVal
    call $setOperation
    
    wait 16000
    marker 0 0
    signal verify in_PulseRisingEdgeRecordedNumberOfTimestamps GetNumberOfRisingEdgeRecordsVal 4 0xFFFFFFFF
    var verify GetNumberOfRisingEdgeRecordsVal 4 0xFFFFFFFF
    log message $FAILURE "loops rising {} " $GetNumberOfRisingEdgeRecordsVal
    signal verify in_PulseFallingEdgeRecordedNumberOfTimestamps GetNumberOfFallingEdgeRecordsVal 4 0xFFFFFFFF
    var verify GetNumberOfFallingEdgeRecordsVal 4 0xFFFFFFFF
    log message $FAILURE "loops falling {} " $GetNumberOfFallingEdgeRecordsVal
    
       
    signal read in_PulseRisingEdgeTimestamp0 GetRisingEdgeTimestamp0Val
    signal read in_PulseRisingEdgeTimestamp1 GetRisingEdgeTimestamp1Val
    signal read in_PulseRisingEdgeTimestamp2 GetRisingEdgeTimestamp2Val
    signal read in_PulseRisingEdgeTimestamp3 GetRisingEdgeTimestamp3Val
    signal read in_PulseFallingEdgeTimestamp0 GetFallingEdgeTimestamp0Val
    signal read in_PulseFallingEdgeTimestamp1 GetFallingEdgeTimestamp1Val
    signal read in_PulseFallingEdgeTimestamp2 GetFallingEdgeTimestamp2Val
    signal read in_PulseFallingEdgeTimestamp3 GetFallingEdgeTimestamp3Val
    
    equ PulseWidthHigh0Val $GetFallingEdgeTimestamp0Val
    sub PulseWidthHigh0Val $GetRisingEdgeTimestamp0Val
    
    equ PulseWidthLow0Val $GetRisingEdgeTimestamp1Val
    sub PulseWidthLow0Val $GetFallingEdgeTimestamp0Val
    
    equ PulseWidthHigh1Val $GetFallingEdgeTimestamp1Val
    sub PulseWidthHigh1Val $GetRisingEdgeTimestamp1Val
    
    equ PulseWidthLow1Val $GetRisingEdgeTimestamp2Val
    sub PulseWidthLow1Val $GetFallingEdgeTimestamp1Val
    
    equ PulseWidthHigh2Val $GetFallingEdgeTimestamp2Val
    sub PulseWidthHigh2Val $GetRisingEdgeTimestamp2Val
    
    equ PulseWidthLow2Val $GetRisingEdgeTimestamp3Val
    sub PulseWidthLow2Val $GetFallingEdgeTimestamp2Val
    
    equ PulseWidthHigh3Val $GetFallingEdgeTimestamp3Val
    sub PulseWidthHigh3Val $GetRisingEdgeTimestamp3Val
    
    log message $FAILURE "was here"
    
    if $PulseWidthHigh0Val < $PulseWidthHighMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 0 to small, expected min {:d}, got {:d}" $PulseWidthHighMin $PulseWidthHigh0Val
      call $incStandardTestVerifyFailureCount
    end if
   	if $PulseWidthHigh0Val > $PulseWidthHighMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 0 to large, expected max {:d}, got {:d}" $PulseWidthHighMax $PulseWidthHigh0Val
      call $incStandardTestVerifyFailureCount
    end if    
    
    if $PulseWidthLow0Val < $PulseWidthLowMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 0 to small, expected min {:d}, got {:d}" $PulseWidthLowMin $PulseWidthLow0Val
      call $incStandardTestVerifyFailureCount
    end if
    if $PulseWidthLow0Val > $PulseWidthLowMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 0 to large, expected max {:d}, got {:d}" $PulseWidthLowMax $PulseWidthLow0Val
      call $incStandardTestVerifyFailureCount
    end if  
        
    if $PulseWidthHigh1Val < $PulseWidthHighMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 1 to small, expected min {:d}, got {:d}" $PulseWidthHighMin $PulseWidthHigh1Val
      call $incStandardTestVerifyFailureCount
    end if
   	if $PulseWidthHigh1Val > $PulseWidthHighMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 1 to large, expected max {:d}, got {:d}" $PulseWidthHighMax $PulseWidthHigh1Val
      call $incStandardTestVerifyFailureCount
    end if    
    
    if $PulseWidthLow1Val < $PulseWidthLowMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 1 to small, expected min {:d}, got {:d}" $PulseWidthLowMin $PulseWidthLow1Val
      call $incStandardTestVerifyFailureCount
    end if
    if $PulseWidthLow1Val > $PulseWidthLowMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 1 to large, expected max {:d}, got {:d}" $PulseWidthLowMax $PulseWidthLow1Val
      call $incStandardTestVerifyFailureCount
    end if  
    
    if $PulseWidthHigh2Val < $PulseWidthHighMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 2 to small, expected min {:d}, got {:d}" $PulseWidthHighMin $PulseWidthHigh2Val
      call $incStandardTestVerifyFailureCount
    end if
   	if $PulseWidthHigh2Val > $PulseWidthHighMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 2 to large, expected max {:d}, got {:d}" $PulseWidthHighMax $PulseWidthHigh2Val
      call $incStandardTestVerifyFailureCount
    end if    
    
    if $PulseWidthLow2Val < $PulseWidthLowMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 2 to small, expected min {:d}, got {:d}" $PulseWidthLowMin $PulseWidthLow2Val
      call $incStandardTestVerifyFailureCount
    end if
    if $PulseWidthLow2Val > $PulseWidthLowMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width Low 2 to large, expected max {:d}, got {:d}" $PulseWidthLowMax $PulseWidthLow2Val
      call $incStandardTestVerifyFailureCount
    end if  
        
    if $PulseWidthHigh3Val < $PulseWidthHighMin 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 3 to small, expected min {:d}, got {:d}" $PulseWidthHighMin $PulseWidthHigh3Val
      call $incStandardTestVerifyFailureCount
    end if
   	if $PulseWidthHigh3Val > $PulseWidthHighMax 
      log message $FAILURE "testPeriod4000nsWidth1500ns: Pulse Width High 3 to large, expected max {:d}, got {:d}" $PulseWidthHighMax $PulseWidthHigh3Val
      call $incStandardTestVerifyFailureCount
    end if    

    call $endStandardTestShell 
end proc
